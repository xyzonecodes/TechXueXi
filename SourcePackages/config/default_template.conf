# version.20210811
# 系统默认配置文件，会随版本更新而覆盖，请勿在此修改
# 用户自定义配置文件请修改 user/settings.conf，语法遵循 hocon
# 用户自定义配置文件可仿照此文件格式编辑，优先级高于本文件

# base 基本设置
base {
    ModeText = 
"""--------------------------------------
0 仅登录
1 文章+视频
2           每日答题+每周答题+专项答题
3 文章+视频+每日答题+每周答题+专项答题
4 更改默认用户
5 查看所有用户今日得分情况
6 刷新所有用户登录状态为最新"""

    # 请对照上方模式,选择默认模式。此配置项也可以填写 0,如果此配置项为 0 ，则每次询问模式。
    # 默认自动运行3，方便每天自动定时启动
    ModeType=3

    # 是否先完成答题任务之后再完成文章视频?（此配置项暂未应用至代码。）
    # 由于文章视频比较稳定,但答题还在测试阶段，可能会出现各种问题，建议你在答题阶段值守在电脑旁边，先答题，之后再完成文章视频。
    # 0表示：否；1表示：是
    AnswerFirst=1

    # 是否同时做文章和视频任务？（是否多线程？）（此配置项暂未应用至代码。）
    # 同时做文章和视频任务可以节省时间，但会增加被查的风险。虽然现在此风险可以忽略不计。
    # 0表示：否；1表示：是
    #multithreading=1

    # 找死的多线程方法。同时做题文章视频。（此配置项暂未应用至代码。）
    # 这个需要开启上面的多线程之后才生效。请注意封号风险。
    # 0表示：否；1表示：是
    #KillYourself=0

    # 完成之后是否关机？（此配置项暂未应用至代码。）
    # 0表示：否；1表示：是
    #ShutdownComputer=0

    # 没有找到答案的选择题是否提交随机答案。（此配置项暂未应用至代码。）
    # 0表示：否；1表示：是
    #SubmitRandomAnswers=1

    # 是否保存日志文件（此配置项暂未应用至代码。）
    # 0表示：否；1表示：是
    #SaveLogs=0

    # 自动注销 （此配置项暂未应用至代码。）
    #keep_alive = 1

}

# addition 附加功能
addition {
    # 是否通过邮件微信或其他方式发送登录二维码？此功能暂不支持。（此配置项暂未应用至代码。）
    #SendLoginQRcode=1

    # 是否通过自定义机器人发送登录二维码？
    # 1表示：钉钉 ,2表示：微信（此配置项暂未应用至代码。）， 0不开启
    SendLoginQRcode=1



    # 推送模式，1表示：钉钉，2表示：微信（并未实现），3表示：Server酱，4表示：pluspush，0表示不开启
    Pushmode="1"

    ################################## 定义通知TOKEN（选填） ##################################
    ## 想通过什么渠道收取通知，就填入对应渠道的值
    ## 1. ServerChan，教程：http://sc.ftqq.com/3.version
    SCKEY=""

    ## 2. BARK，教程（看BARK_PUSH和BARK_SOUND的说明）：https://gitee.com/lxk0301/jd_docker/blob/master/githubAction.md#%E4%B8%8B%E6%96%B9%E6%8F%90%E4%BE%9B%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84-secrets%E5%85%A8%E9%9B%86%E5%90%88
    BARK_PUSH=""
    BARK_SOUND=""

    ## 3. Telegram，如需使用，TG_BOT_TOKEN和TG_USER_ID必须同时赋值，教程：https://gitee.com/lxk0301/jd_docker/blob/master/backUp/TG_PUSH.md
    TG_BOT_TOKEN="1782609646:AAGYSScBxMSoEV7gO0mrmnbKHI2E8ucZJzc"
    TG_USER_ID="1597379002"

    ## 4. 钉钉，教程（看DD_BOT_TOKEN和DD_BOT_SECRET部分）：https://gitee.com/lxk0301/jd_docker/blob/master/githubAction.md#%E4%B8%8B%E6%96%B9%E6%8F%90%E4%BE%9B%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84-secrets%E5%85%A8%E9%9B%86%E5%90%88
    DD_BOT_TOKEN="d8cd5c17c51308be2ab6103f6d14992a431a952c698f3fc19dc3da9d34164732"
    DD_BOT_SECRET="SEC755b7971289ee6e7594eca58d2955980ec8ff506e7448cc670f7d3bab04ab5c0"

    ## 5. iGot聚合推送，支持多方式推送，填写iGot的推送key。教程：https://wahao.github.io/Bark-MP-helper/#/
    IGOT_PUSH_KEY=""

    ## 6. Push Plus，微信扫码登录后一对一推送或一对多推送，参考文档：http://www.pushplus.plus
    ## 其中PUSH_PLUS_USER是一对多推送的“群组编码”（一对多推送下面->您的群组(如无则新建)->群组编码）注:(1、需订阅者扫描二维码 2、如果您是创建群组所属人，也需点击“查看二维码”扫描绑定，否则不能接受群组消息推送)，只填PUSH_PLUS_TOKEN默认为一对一推送
    PUSH_PLUS_TOKEN=""
    PUSH_PLUS_USER=""

    ## 7. 企业微信机器人消息推送 webhook 后面的 key，文档：https://work.weixin.qq.com/api/doc/90000/90136/91770
    QYWX_KEY=""

    ## 8. 企业微信应用消息推送的值，文档：https://work.weixin.qq.com/api/doc/90000/90135/90236 
    ## 依次填上corpid的值,corpsecret的值,touser的值,agentid,media_id的值，注意用,号隔开，例如："wwcff56746d9adwers,B-791548lnzXBE6_BWfxdf3kSTMJr9vFEPKAbh6WERQ,mingcheng,1000001,2COXgjH2UIfERF2zxrtUOKgQ9XklUqMdGSWLBoW_lSDAdafat"
    QYWX_AM=""

    # 推送参数设置
    # 钉钉机器人接入方式请参考 https://developers.dingtalk.com/document/app/custom-robot-access/title-72m-8ag-pqw

    # Server酱接入参考 http://pushplus.hxtrip.com/
    # pluspush介入参考 http://pushplus.hxtrip.com/
    # 对于Server酱和pluspush，只需要填写token，而钉钉机器人需要填写token和secret
    # token= XXXXXXXX
    # secret= SSSSSSS

    # 微信设置，分别是 #企业ID，在管理后台获取    #自建应用的Secret，每个自建应用里都有单独的secret
    # #应用ID，在后台应用中获取   # 接收者用户名,多个用户用|分割
    #（此配置项暂未应用至代码。）
    # CORPID=
    # CORPSECRET=
    # AGENTID=
    # TOUSER=
}

# parameter 参数设置
parameter {
    #   挑战答题题数上下限（此配置项暂未应用至代码。）
    #challenge_count_min = 10
    #challenge_count_max = 15

    #   挑战答题提交延时上下限（此配置项暂未应用至代码。）
    #challenge_delay_min = 2
    #challenge_delay_max = 6

    #   每日答题题间延时上下限（此配置项暂未应用至代码。）
    #daily_delay_min = 3
    #daily_delay_max = 5

    #   每日答题组间延时上下限（此配置项暂未应用至代码。）
    #daily_group_delay_min = 5
    #daily_group_delay_max = 10

    # 每日答题单组题数（此配置项暂未应用至代码。）
    #daily_count_each_group = 10

    #   试听学 xi 观看视频数量上下限（此配置项暂未应用至代码。）
    #video_count_min = 12
    #video_count_max = 15

    #   试听学 xi 每则视频观看时间上下限（此配置项暂未应用至代码。）
    # video_delay_min = 25
    # video_delay_max = 30

    #   收听广播栏目（此配置项暂未应用至代码。）
    #radio_chanel = 音乐之声

    # 广播开关（此配置项暂未应用至代码。）
    # -default 根据视听学 xi 时长情况自主选择
    # -enable  开启
    # -disable 关闭
    #radio_switch = default

    #   新闻学 xi 栏目（此配置项暂未应用至代码。）
    #article_volumn_title = 订阅

    #   新闻学 xi 数量上下限（此配置项暂未应用至代码。）
    #article_count_min = 12
    #article_count_max = 15

    #   新闻学 xi 阅读组间时延上下限（此配置项暂未应用至代码。）
    #article_delay_min = 3
    #article_delay_max = 5

    #   收藏分享数量（此配置项暂未应用至代码。）
    #star_share_comments_count = 2

    # 执行每周答题、专项答题的日子（此配置项暂未应用至代码。）
    # ------------------------------------------------
    # 字符串形式：1~7表示周一至周日 0表示跳过
    #workdays = 0
}

# display 显示设置
display {
    # 显示banner (true/false)
    banner = true
}